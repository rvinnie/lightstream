name: "Push to Yandex Cloud CR"
on:
  push:
    branches: [ main ]

jobs:
  check:
    name: Check changed files
    outputs:
      gateway_service: ${{ steps.check_files.outputs.gateway_service }}
      history_service: ${{ steps.check_files.outputs.history_service }}
      storage_service: ${{ steps.check_files.outputs.storage_service }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
        
      - name: Check modified files
        id: check_files
        run: |
            echo "=============== list modified files ==============="
            git diff --name-only HEAD^ HEAD

            echo "========== check paths of modified files =========="
            git diff --name-only HEAD^ HEAD > files.txt
            while IFS= read -r file; do
              echo $file
              if [[ $file == services/gateway/* ]]; then
                echo "::set-output name=gateway_service::true"
              elif [[ $file == services/history/* ]]; then
                echo "::set-output name=history_service::true"
              elif [[ $file == services/storage/* ]]; then
                echo "::set-output name=storage_service::true"
              else
                echo "file does not belong to any service"
              fi
            done < files.txt
  
  gateway_service:
    needs: check
    if: needs.check.outputs.gateway_service == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpb45qs3j62nc2j1lts
          CR_REPOSITORY: gateway
          IMAGE_TAG: ${{ github.sha }}
          PATH_TO_DOCKERFILE: services/gateway
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG --file $PATH_TO_DOCKERFILE/prod.Dockerfile $PATH_TO_DOCKERFILE
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
  
  history_service:
    needs: check
    if: needs.check.outputs.history_service == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpb45qs3j62nc2j1lts
          CR_REPOSITORY: history
          IMAGE_TAG: ${{ github.sha }}
          PATH_TO_DOCKERFILE: services/history
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG --file $PATH_TO_DOCKERFILE/prod.Dockerfile $PATH_TO_DOCKERFILE
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
          
  storage_service:
    needs: check
    if: needs.check.outputs.storage_service == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Login to Yandex Cloud Container Registry
        id: login-cr
        uses: yc-actions/yc-cr-login@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_SA_JSON_CREDENTIALS }}
          
      - name: Build, tag, and push image to Yandex Cloud Container Registry
        env:
          CR_REGISTRY: crpb45qs3j62nc2j1lts
          CR_REPOSITORY: storage
          IMAGE_TAG: ${{ github.sha }}
          PATH_TO_DOCKERFILE: services/storage
        run: |
          docker build -t cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG --file $PATH_TO_DOCKERFILE/prod.Dockerfile $PATH_TO_DOCKERFILE
          docker push cr.yandex/$CR_REGISTRY/$CR_REPOSITORY:$IMAGE_TAG
